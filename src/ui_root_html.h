/*
 * Binary arrays for the Web UI root directory (HTML files).
 * Zopfli compression is used for smaller size and improved speeds.
 */

#pragma once
#include <ESPAsyncWebServer.h>
#include <Arduino.h>

// devices_html
const uint16_t DEVICES_HTML_L = 683;
const uint8_t DEVICES_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x9d, 0x54, 0xd7, 0x96, 0xdb, 0x20,
  0x10, 0x7d, 0xf6, 0x7e, 0xc5, 0x2c, 0x29, 0x96, 0xce, 0x91, 0x70, 0x49, 0x4f, 0xac, 0x4d, 0xef,
  0xbd, 0xf7, 0x82, 0xc5, 0xd8, 0x22, 0x46, 0xa0, 0x03, 0xd8, 0xde, 0xfa, 0xef, 0x01, 0x95, 0xf4,
  0xfe, 0x22, 0xc1, 0x94, 0x3b, 0xe5, 0xce, 0x30, 0xd9, 0xe4, 0x3a, 0x77, 0x3b, 0x15, 0x42, 0xe1,
  0x4a, 0xb9, 0xb5, 0x31, 0x09, 0x3f, 0x90, 0x4c, 0xcd, 0x33, 0x82, 0x8a, 0x6c, 0x6d, 0xf4, 0x26,
  0x05, 0x32, 0xee, 0xff, 0xbd, 0x49, 0x89, 0x8e, 0x41, 0x5e, 0x30, 0x63, 0xd1, 0x65, 0x64, 0xe9,
  0x66, 0xe9, 0x69, 0x02, 0x83, 0x5a, 0x25, 0x85, 0x5a, 0x80, 0x41, 0x99, 0x11, 0x91, 0x6b, 0x45,
  0xa0, 0x30, 0x38, 0xcb, 0x08, 0x1d, 0xcc, 0xd8, 0x2a, 0x08, 0x68, 0xa5, 0xe6, 0x9d, 0x69, 0x8d,
  0xa2, 0x58, 0x89, 0x19, 0x59, 0x09, 0x5c, 0x57, 0xda, 0x38, 0x02, 0xde, 0xc6, 0xa1, 0xf2, 0xa8,
  0x6b, 0xc1, 0x5d, 0x91, 0x71, 0xf4, 0x6e, 0x98, 0xd6, 0x97, 0x04, 0x84, 0x12, 0x4e, 0x30, 0x99,
  0xda, 0x9c, 0x49, 0xcc, 0x46, 0x1d, 0x90, 0xcd, 0x8d, 0xa8, 0x5c, 0x38, 0xf6, 0x06, 0x03, 0xb8,
  0xaf, 0xa0, 0x62, 0x73, 0x04, 0xa9, 0x19, 0x07, 0x6d, 0x60, 0x5d, 0xa0, 0x0a, 0xc9, 0xaa, 0xb9,
  0x50, 0x73, 0x70, 0x05, 0x96, 0x68, 0x13, 0x98, 0xa2, 0x75, 0xe0, 0x34, 0x30, 0xce, 0x3d, 0xac,
  0xcf, 0x1a, 0xfd, 0x0f, 0x3e, 0x84, 0x12, 0x3f, 0xd4, 0xf2, 0x95, 0x16, 0x1c, 0xae, 0xdd, 0x7f,
  0x7a, 0x39, 0xc0, 0x8a, 0x19, 0x44, 0x52, 0xfb, 0xa8, 0x8f, 0x9d, 0x36, 0x1e, 0x9c, 0xd6, 0x30,
  0x90, 0x65, 0x19, 0xf4, 0x39, 0x33, 0x8b, 0x3e, 0xec, 0xef, 0x43, 0xb4, 0x19, 0xf5, 0x6b, 0x79,
  0x3f, 0x40, 0x7d, 0x6d, 0x1e, 0xc3, 0xd1, 0xa3, 0xb0, 0x16, 0x8a, 0xeb, 0x35, 0x2d, 0x99, 0xcb,
  0x8b, 0xbb, 0xc8, 0x05, 0x8b, 0xfa, 0x51, 0xe5, 0xbb, 0x83, 0xc6, 0xa6, 0xb9, 0x96, 0xda, 0xf8,
  0xb2, 0x82, 0xf7, 0x59, 0x08, 0x88, 0x71, 0x3f, 0x6e, 0x4c, 0xd1, 0xc6, 0x31, 0xec, 0x85, 0x24,
  0x7a, 0x9e, 0xa0, 0x65, 0x89, 0xca, 0xd1, 0xee, 0x70, 0x55, 0x62, 0x7d, 0xcf, 0x25, 0xb3, 0xf6,
  0x8e, 0xb0, 0x8e, 0xfa, 0x72, 0xa2, 0x26, 0xa3, 0xf8, 0x5c, 0xf0, 0x39, 0x00, 0x94, 0x16, 0xff,
  0xde, 0xdf, 0x60, 0xa9, 0x57, 0xf8, 0x2d, 0x44, 0x68, 0xf1, 0xe0, 0x4b, 0x8f, 0x3f, 0xb3, 0xdc,
  0x51, 0xcb, 0xaa, 0x6a, 0x20, 0xca, 0x72, 0xe9, 0xd8, 0x54, 0xe2, 0xc0, 0x23, 0xa1, 0xb3, 0x03,
  0x5f, 0x2c, 0x6e, 0xd3, 0x4b, 0x92, 0x3f, 0x7f, 0x31, 0x1b, 0xbf, 0xa4, 0xb9, 0xb5, 0xa4, 0x19,
  0x0b, 0xeb, 0x76, 0x24, 0xda, 0x02, 0xd1, 0x91, 0xef, 0x06, 0xa6, 0xd4, 0x7c, 0x29, 0xd1, 0xb7,
  0x24, 0x30, 0x47, 0x7e, 0x01, 0xef, 0xd3, 0x35, 0x3b, 0x03, 0xeb, 0x98, 0x71, 0xf4, 0xd4, 0xfa,
  0xd2, 0x8d, 0x1d, 0xc9, 0x53, 0xfa, 0xd1, 0xfe, 0x17, 0x56, 0x5e, 0x2c, 0xd5, 0xa2, 0x4b, 0xf5,
  0xf2, 0x6c, 0xdb, 0x0e, 0x5f, 0x1d, 0x3f, 0xed, 0xc1, 0xfe, 0x3f, 0xb1, 0x20, 0xa3, 0x97, 0xd5,
  0x45, 0xf3, 0xfc, 0xd1, 0xa3, 0x13, 0x2d, 0xd2, 0x64, 0xd0, 0xee, 0xcd, 0x64, 0xaa, 0xf9, 0x0e,
  0x70, 0xe6, 0x58, 0x6a, 0x57, 0x28, 0x1d, 0x2e, 0x84, 0x4b, 0x5b, 0xd4, 0x34, 0x88, 0x33, 0x52,
  0xf8, 0xe6, 0x9b, 0x26, 0x3c, 0x17, 0x2b, 0xa8, 0x7b, 0x95, 0x11, 0x2e, 0x6c, 0x25, 0xd9, 0xce,
  0xd9, 0x6e, 0x39, 0x6a, 0xd8, 0x6f, 0xe7, 0xbe, 0xd7, 0x30, 0xdc, 0x7b, 0xff, 0xfe, 0x33, 0xf4,
  0xfb, 0xe3, 0x27, 0x0a, 0xc8, 0xa0, 0x55, 0xf4, 0xa6, 0xcc, 0xfa, 0xd1, 0x52, 0xb8, 0x86, 0xa7,
  0x8f, 0xee, 0x44, 0x84, 0x92, 0xa4, 0x1e, 0x51, 0x27, 0xb4, 0x8a, 0x69, 0xc5, 0x5c, 0x11, 0x36,
  0x91, 0x5a, 0x29, 0x72, 0x8c, 0x86, 0x09, 0xa4, 0xa3, 0x38, 0x69, 0x3d, 0x1b, 0x46, 0xcf, 0x02,
  0x19, 0x2c, 0x05, 0x69, 0x64, 0x07, 0xe7, 0x36, 0x9a, 0x83, 0xcf, 0xc8, 0x3a, 0xc0, 0x66, 0x8e,
  0x7c, 0xb4, 0xcf, 0x23, 0x96, 0x2f, 0x8d, 0xf1, 0xff, 0xc7, 0x75, 0x8a, 0x1e, 0xdf, 0x7c, 0x19,
  0xb7, 0xce, 0xf7, 0x81, 0xd1, 0xa5, 0xb0, 0x48, 0x99, 0x94, 0xd1, 0xeb, 0x36, 0x96, 0x28, 0xc3,
  0x33, 0x10, 0xfd, 0x35, 0xed, 0x71, 0xf2, 0xad, 0xe3, 0x5f, 0xd2, 0x12, 0x37, 0x5e, 0x6f, 0xe3,
  0xb0, 0xc8, 0x2a, 0x8a, 0x5e, 0xfb, 0x7e, 0x25, 0xe0, 0xad, 0xde, 0xc6, 0x90, 0x6d, 0x7d, 0xee,
  0x99, 0x97, 0xd2, 0x3a, 0x66, 0xe4, 0x55, 0x49, 0x57, 0x66, 0x7c, 0xae, 0x6d, 0x42, 0x38, 0x34,
  0x0b, 0xf2, 0xcd, 0x86, 0xf8, 0xb3, 0x27, 0xaf, 0x66, 0x3e, 0x30, 0xee, 0x9f, 0xd2, 0x41, 0xf3,
  0xa4, 0x7e, 0x02, 0x85, 0x60, 0x79, 0x2d, 0x63, 0x05, 0x00, 0x00
};

inline void serveDevicesHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", DEVICES_HTML, DEVICES_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

// fingerprints_html
const uint16_t FINGERPRINTS_HTML_L = 683;
const uint8_t FINGERPRINTS_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x9d, 0x54, 0xd7, 0x96, 0xdb, 0x20,
  0x10, 0x7d, 0xf6, 0x7e, 0xc5, 0x2c, 0x29, 0x96, 0xce, 0x91, 0x70, 0x49, 0x4f, 0xac, 0x4d, 0xef,
  0xbd, 0xf7, 0x82, 0xc5, 0xd8, 0x22, 0x46, 0xa0, 0x03, 0xd8, 0xde, 0xfa, 0xef, 0x01, 0x95, 0xf4,
  0xfe, 0x22, 0xc1, 0x94, 0x3b, 0xe5, 0xce, 0x30, 0xd9, 0xe4, 0x3a, 0x77, 0x3b, 0x15, 0x42, 0xe1,
  0x4a, 0xb9, 0xb5, 0x31, 0x09, 0x3f, 0x90, 0x4c, 0xcd, 0x33, 0x82, 0x8a, 0x6c, 0x6d, 0xf4, 0x26,
  0x05, 0x32, 0xee, 0xff, 0xbd, 0x49, 0x89, 0x8e, 0x41, 0x5e, 0x30, 0x63, 0xd1, 0x65, 0x64, 0xe9,
  0x66, 0xe9, 0x69, 0x02, 0x83, 0x5a, 0x25, 0x85, 0x5a, 0x80, 0x41, 0x99, 0x11, 0x91, 0x6b, 0x45,
  0xa0, 0x30, 0x38, 0xcb, 0x08, 0x1d, 0xcc, 0xd8, 0x2a, 0x08, 0x68, 0xa5, 0xe6, 0x9d, 0x69, 0x8d,
  0xa2, 0x58, 0x89, 0x19, 0x59, 0x09, 0x5c, 0x57, 0xda, 0x38, 0x02, 0xde, 0xc6, 0xa1, 0xf2, 0xa8,
  0x6b, 0xc1, 0x5d, 0x91, 0x71, 0xf4, 0x6e, 0x98, 0xd6, 0x97, 0x04, 0x84, 0x12, 0x4e, 0x30, 0x99,
  0xda, 0x9c, 0x49, 0xcc, 0x46, 0x1d, 0x90, 0xcd, 0x8d, 0xa8, 0x5c, 0x38, 0xf6, 0x06, 0x03, 0xb8,
  0xaf, 0xa0, 0x62, 0x73, 0x04, 0xa9, 0x19, 0x07, 0x6d, 0x60, 0x5d, 0xa0, 0x0a, 0xc9, 0xaa, 0xb9,
  0x50, 0x73, 0x70, 0x05, 0x96, 0x68, 0x13, 0x98, 0xa2, 0x75, 0xe0, 0x34, 0x30, 0xce, 0x3d, 0xac,
  0xcf, 0x1a, 0xfd, 0x0f, 0x3e, 0x84, 0x12, 0x3f, 0xd4, 0xf2, 0x95, 0x16, 0x1c, 0xae, 0xdd, 0x7f,
  0x7a, 0x39, 0xc0, 0x8a, 0x19, 0x44, 0x52, 0xfb, 0xa8, 0x8f, 0x9d, 0x36, 0x1e, 0x9c, 0xd6, 0x30,
  0x90, 0x65, 0x19, 0xf4, 0x39, 0x33, 0x8b, 0x3e, 0xec, 0xef, 0x43, 0xb4, 0x19, 0xf5, 0x6b, 0x79,
  0x3f, 0x40, 0x7d, 0x6d, 0x1e, 0xc3, 0xd1, 0xa3, 0xb0, 0x16, 0x8a, 0xeb, 0x35, 0x2d, 0x99, 0xcb,
  0x8b, 0xbb, 0xc8, 0x05, 0x8b, 0xfa, 0x51, 0xe5, 0xbb, 0x83, 0xc6, 0xa6, 0xb9, 0x96, 0xda, 0xf8,
  0xb2, 0x82, 0xf7, 0x59, 0x08, 0x88, 0x71, 0x3f, 0x6e, 0x4c, 0xd1, 0xc6, 0x31, 0xec, 0x85, 0x24,
  0x7a, 0x9e, 0xa0, 0x65, 0x89, 0xca, 0xd1, 0xee, 0x70, 0x55, 0x62, 0x7d, 0xcf, 0x25, 0xb3, 0xf6,
  0x8e, 0xb0, 0x8e, 0xfa, 0x72, 0xa2, 0x26, 0xa3, 0xf8, 0x5c, 0xf0, 0x39, 0x00, 0x94, 0x16, 0xff,
  0xde, 0xdf, 0x60, 0xa9, 0x57, 0xf8, 0x2d, 0x44, 0x68, 0xf1, 0xe0, 0x4b, 0x8f, 0x3f, 0xb3, 0xdc,
  0x51, 0xcb, 0xaa, 0x6a, 0x20, 0xca, 0x72, 0xe9, 0xd8, 0x54, 0xe2, 0xc0, 0x23, 0xa1, 0xb3, 0x03,
  0x5f, 0x2c, 0x6e, 0xd3, 0x4b, 0x92, 0x3f, 0x7f, 0x31, 0x1b, 0xbf, 0xa4, 0xb9, 0xb5, 0xa4, 0x19,
  0x0b, 0xeb, 0x76, 0x24, 0xda, 0x02, 0xd1, 0x91, 0xef, 0x06, 0xa6, 0xd4, 0x7c, 0x29, 0xd1, 0xb7,
  0x24, 0x30, 0x47, 0x7e, 0x01, 0xef, 0xd3, 0x35, 0x3b, 0x03, 0xeb, 0x98, 0x71, 0xf4, 0xd4, 0xfa,
  0xd2, 0x8d, 0x1d, 0xc9, 0x53, 0xfa, 0xd1, 0xfe, 0x17, 0x56, 0x5e, 0x2c, 0xd5, 0xa2, 0x4b, 0xf5,
  0xf2, 0x6c, 0xdb, 0x0e, 0x5f, 0x1d, 0x3f, 0xed, 0xc1, 0xfe, 0x3f, 0xb1, 0x20, 0xa3, 0x97, 0xd5,
  0x45, 0xf3, 0xfc, 0xd1, 0xa3, 0x13, 0x2d, 0xd2, 0x64, 0xd0, 0xee, 0xcd, 0x64, 0xaa, 0xf9, 0x0e,
  0x70, 0xe6, 0x58, 0x6a, 0x57, 0x28, 0x1d, 0x2e, 0x84, 0x4b, 0x5b, 0xd4, 0x34, 0x88, 0x33, 0x52,
  0xf8, 0xe6, 0x9b, 0x26, 0x3c, 0x17, 0x2b, 0xa8, 0x7b, 0x95, 0x11, 0x2e, 0x6c, 0x25, 0xd9, 0xce,
  0xd9, 0x6e, 0x39, 0x6a, 0xd8, 0x6f, 0xe7, 0xbe, 0xd7, 0x30, 0xdc, 0x7b, 0xff, 0xfe, 0x33, 0xf4,
  0xfb, 0xe3, 0x27, 0x0a, 0xc8, 0xa0, 0x55, 0xf4, 0xa6, 0xcc, 0xfa, 0xd1, 0x52, 0xb8, 0x86, 0xa7,
  0x8f, 0xee, 0x44, 0x84, 0x92, 0xa4, 0x1e, 0x51, 0x27, 0xb4, 0x8a, 0x69, 0xc5, 0x5c, 0x11, 0x36,
  0x91, 0x5a, 0x29, 0x72, 0x8c, 0x86, 0x09, 0xa4, 0xa3, 0x38, 0x69, 0x3d, 0x1b, 0x46, 0xcf, 0x02,
  0x19, 0x2c, 0x05, 0x69, 0x64, 0x07, 0xe7, 0x36, 0x9a, 0x83, 0xcf, 0xc8, 0x3a, 0xc0, 0x66, 0x8e,
  0x7c, 0xb4, 0xcf, 0x23, 0x96, 0x2f, 0x8d, 0xf1, 0xff, 0xc7, 0x75, 0x8a, 0x1e, 0xdf, 0x7c, 0x19,
  0xb7, 0xce, 0xf7, 0x81, 0xd1, 0xa5, 0xb0, 0x48, 0x99, 0x94, 0xd1, 0xeb, 0x36, 0x96, 0x28, 0xc3,
  0x33, 0x10, 0xfd, 0x35, 0xed, 0x71, 0xf2, 0xad, 0xe3, 0x5f, 0xd2, 0x12, 0x37, 0x5e, 0x6f, 0xe3,
  0xb0, 0xc8, 0x2a, 0x8a, 0x5e, 0xfb, 0x7e, 0x25, 0xe0, 0xad, 0xde, 0xc6, 0x90, 0x6d, 0x7d, 0xee,
  0x99, 0x97, 0xd2, 0x3a, 0x66, 0xe4, 0x55, 0x49, 0x57, 0x66, 0x7c, 0xae, 0x6d, 0x42, 0x38, 0x34,
  0x0b, 0xf2, 0xcd, 0x86, 0xf8, 0xb3, 0x27, 0xaf, 0x66, 0x3e, 0x30, 0xee, 0x9f, 0xd2, 0x41, 0xf3,
  0xa4, 0x7e, 0x02, 0x85, 0x60, 0x79, 0x2d, 0x63, 0x05, 0x00, 0x00
};

inline void serveFingerprintsHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", FINGERPRINTS_HTML, FINGERPRINTS_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

// index_html
const uint16_t INDEX_HTML_L = 655;
const uint8_t INDEX_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xa5, 0x54, 0xd5, 0x96, 0xdb, 0x3c,
  0x10, 0xbe, 0xce, 0x3e, 0xc5, 0xac, 0x7e, 0x88, 0x7d, 0x4e, 0xec, 0xc0, 0x0f, 0xa5, 0x78, 0xcb,
  0xcc, 0xcc, 0xa0, 0x58, 0x93, 0x58, 0x8d, 0x2c, 0xf9, 0x48, 0x0a, 0x15, 0xde, 0xbd, 0x23, 0xdb,
  0x8b, 0xe5, 0xf6, 0xc6, 0x92, 0x06, 0xbe, 0xc1, 0xcf, 0xe3, 0x6d, 0x61, 0x72, 0xbf, 0xa9, 0x10,
  0x0a, 0x5f, 0xaa, 0x9d, 0xad, 0x71, 0x38, 0x40, 0x71, 0x3d, 0xcb, 0x18, 0x6a, 0xb6, 0xb3, 0xd5,
  0x19, 0x17, 0xc8, 0x05, 0x9d, 0x9d, 0x71, 0x89, 0x9e, 0x43, 0x5e, 0x70, 0xeb, 0xd0, 0x67, 0x6c,
  0xe1, 0xa7, 0xc9, 0x71, 0x06, 0xfd, 0x5a, 0xa5, 0xa4, 0x9e, 0x83, 0x45, 0x95, 0x31, 0x99, 0x1b,
  0xcd, 0xa0, 0xb0, 0x38, 0xcd, 0x58, 0x7f, 0x21, 0xfb, 0x53, 0xbe, 0x0c, 0xa2, 0xb4, 0xd2, 0xb3,
  0xd6, 0xb8, 0xc1, 0xd1, 0xbc, 0xc4, 0x8c, 0x2d, 0x25, 0xae, 0x2a, 0x63, 0x3d, 0x03, 0xb2, 0xf1,
  0xa8, 0x09, 0x77, 0x25, 0x85, 0x2f, 0x32, 0x81, 0xe4, 0x86, 0x49, 0xfd, 0xe8, 0x81, 0xd4, 0xd2,
  0x4b, 0xae, 0x12, 0x97, 0x73, 0x85, 0xd9, 0x70, 0x17, 0xc8, 0xe5, 0x56, 0x56, 0x3e, 0x5c, 0x3b,
  0xfd, 0x3e, 0xdc, 0xd6, 0x50, 0xf1, 0x19, 0x82, 0x32, 0x5c, 0x80, 0xb1, 0xb0, 0x2a, 0x50, 0x87,
  0x74, 0xf5, 0x4c, 0xea, 0x19, 0xf8, 0x02, 0x4b, 0x74, 0x3d, 0x98, 0xa0, 0xf3, 0xe0, 0x0d, 0x70,
  0x21, 0x08, 0x96, 0xf2, 0x46, 0x3a, 0xe0, 0x4d, 0x28, 0xf2, 0x4d, 0x2d, 0x5f, 0x1a, 0x29, 0xe0,
  0xd2, 0xed, 0x87, 0xe7, 0x03, 0xac, 0x9c, 0x42, 0xa4, 0x0c, 0x45, 0xbd, 0xef, 0x8d, 0x25, 0xf0,
  0xb4, 0x86, 0x81, 0x2c, 0xcb, 0xa0, 0x2b, 0xb8, 0x9d, 0x77, 0xe1, 0xc3, 0x07, 0x88, 0xb6, 0xa3,
  0x6e, 0x2d, 0xef, 0x06, 0xa8, 0x83, 0xe6, 0x31, 0xfc, 0xfd, 0x37, 0xac, 0xa4, 0x16, 0x66, 0x95,
  0x96, 0xdc, 0xe7, 0xc5, 0x4d, 0x14, 0x92, 0x47, 0xdd, 0xa8, 0xa2, 0xfe, 0xa0, 0x75, 0x49, 0x6e,
  0x94, 0xb1, 0x54, 0x56, 0xf0, 0x3e, 0x09, 0x01, 0x31, 0xee, 0xc6, 0x8d, 0x29, 0xba, 0x38, 0x86,
  0xf7, 0x21, 0x89, 0x0e, 0x8d, 0x68, 0x51, 0xa2, 0xf6, 0xe9, 0xee, 0xe5, 0xa2, 0xc2, 0xfa, 0x9d,
  0x2b, 0xee, 0xdc, 0x0d, 0xe9, 0x7c, 0x4a, 0xe5, 0x44, 0x4d, 0x46, 0xf1, 0xa9, 0xe0, 0xf3, 0x11,
  0x50, 0x39, 0xfc, 0x71, 0x7f, 0x8b, 0xa5, 0x59, 0xe2, 0x61, 0x88, 0xd0, 0xe2, 0xfe, 0x7e, 0x8f,
  0xf7, 0xe6, 0xbc, 0x3f, 0x5c, 0x5e, 0x55, 0x7d, 0x59, 0x96, 0x0b, 0xcf, 0x27, 0x0a, 0xfb, 0x84,
  0x85, 0xde, 0xf5, 0xa9, 0x5c, 0x5c, 0xa7, 0xe7, 0x94, 0x78, 0xfc, 0x64, 0x3a, 0x7a, 0x9a, 0xe6,
  0xce, 0xb1, 0x66, 0x35, 0x9c, 0xdf, 0x28, 0x74, 0x05, 0xa2, 0x67, 0x47, 0x96, 0xa6, 0x34, 0x62,
  0xa1, 0x90, 0x9a, 0x12, 0x66, 0xc7, 0xbe, 0x1a, 0x00, 0xb5, 0xb7, 0x9b, 0xbe, 0xf3, 0xdc, 0xfa,
  0xf4, 0xd8, 0xea, 0xdc, 0x95, 0x8d, 0x12, 0x49, 0xfa, 0xd6, 0xfd, 0x22, 0x5a, 0x5e, 0x2c, 0xf4,
  0x7c, 0x37, 0xdd, 0xf3, 0xd3, 0xb5, 0x1b, 0x3c, 0xfb, 0xf7, 0x38, 0xc1, 0xfd, 0x56, 0x72, 0x24,
  0x4b, 0xcf, 0xeb, 0xb3, 0xf6, 0xf1, 0xbd, 0x7b, 0xff, 0xb5, 0x58, 0xe3, 0x7e, 0xcb, 0xa0, 0xf1,
  0xc4, 0x88, 0x0d, 0x08, 0xee, 0x79, 0xe2, 0x96, 0xa8, 0x3c, 0xce, 0xa5, 0x4f, 0x5a, 0xdc, 0x24,
  0x88, 0x33, 0x56, 0xd0, 0x10, 0x6c, 0x93, 0x80, 0x90, 0x4b, 0xa8, 0x3b, 0x96, 0x31, 0x21, 0x5d,
  0xa5, 0xf8, 0xe6, 0xe4, 0x2e, 0x49, 0x6a, 0xd8, 0xc3, 0xfb, 0xdf, 0x69, 0x26, 0xdd, 0x79, 0xfd,
  0x7a, 0x0f, 0xfa, 0xf5, 0xbf, 0xff, 0x15, 0x90, 0x41, 0xab, 0xe8, 0x4c, 0xb8, 0xa3, 0x15, 0x0b,
  0x89, 0xb3, 0x5e, 0x2b, 0x6a, 0x06, 0xd6, 0x0a, 0x1b, 0xd9, 0xc7, 0x53, 0x5b, 0xcd, 0x85, 0x42,
  0x39, 0x0f, 0xd8, 0x2c, 0x0a, 0xc1, 0xec, 0xed, 0x50, 0xbe, 0xb0, 0x96, 0xce, 0xfb, 0x75, 0xec,
  0xb4, 0xe2, 0x76, 0x7f, 0x9f, 0x76, 0x7d, 0xef, 0x58, 0x53, 0x4a, 0x87, 0x29, 0x57, 0x2a, 0x7a,
  0xde, 0xc6, 0x92, 0x65, 0xe0, 0x79, 0xf4, 0x13, 0x53, 0x8d, 0x7b, 0x87, 0x5d, 0x7f, 0xb8, 0xe7,
  0x71, 0xe3, 0xf7, 0x32, 0x0e, 0x6c, 0xd5, 0x51, 0xf4, 0x9c, 0x9a, 0xd1, 0x03, 0xb2, 0x7a, 0x19,
  0x43, 0xb6, 0xb3, 0xd7, 0x10, 0x92, 0xa6, 0x75, 0xd4, 0x88, 0x54, 0xbd, 0xdd, 0x52, 0xe3, 0x53,
  0x6d, 0x23, 0xda, 0x0b, 0xb1, 0xe0, 0x10, 0x0d, 0xe8, 0x4e, 0x93, 0xa9, 0xc7, 0x1a, 0xc6, 0x49,
  0x7f, 0xcc, 0x7e, 0xf3, 0xe7, 0xfc, 0x04, 0x28, 0x9b, 0xf1, 0x59, 0x4a, 0x05, 0x00, 0x00
};

inline void serveIndexHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", INDEX_HTML, INDEX_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

// settings_html
const uint16_t SETTINGS_HTML_L = 683;
const uint8_t SETTINGS_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x9d, 0x54, 0xd7, 0x96, 0xdb, 0x20,
  0x10, 0x7d, 0xf6, 0x7e, 0xc5, 0x2c, 0x29, 0x96, 0xce, 0x91, 0x70, 0x49, 0x4f, 0xac, 0x4d, 0xef,
  0xbd, 0xf7, 0x82, 0xc5, 0xd8, 0x22, 0x46, 0xa0, 0x03, 0xd8, 0xde, 0xfa, 0xef, 0x01, 0x95, 0xf4,
  0xfe, 0x22, 0xc1, 0x94, 0x3b, 0xe5, 0xce, 0x30, 0xd9, 0xe4, 0x3a, 0x77, 0x3b, 0x15, 0x42, 0xe1,
  0x4a, 0xb9, 0xb5, 0x31, 0x09, 0x3f, 0x90, 0x4c, 0xcd, 0x33, 0x82, 0x8a, 0x6c, 0x6d, 0xf4, 0x26,
  0x05, 0x32, 0xee, 0xff, 0xbd, 0x49, 0x89, 0x8e, 0x41, 0x5e, 0x30, 0x63, 0xd1, 0x65, 0x64, 0xe9,
  0x66, 0xe9, 0x69, 0x02, 0x83, 0x5a, 0x25, 0x85, 0x5a, 0x80, 0x41, 0x99, 0x11, 0x91, 0x6b, 0x45,
  0xa0, 0x30, 0x38, 0xcb, 0x08, 0x1d, 0xcc, 0xd8, 0x2a, 0x08, 0x68, 0xa5, 0xe6, 0x9d, 0x69, 0x8d,
  0xa2, 0x58, 0x89, 0x19, 0x59, 0x09, 0x5c, 0x57, 0xda, 0x38, 0x02, 0xde, 0xc6, 0xa1, 0xf2, 0xa8,
  0x6b, 0xc1, 0x5d, 0x91, 0x71, 0xf4, 0x6e, 0x98, 0xd6, 0x97, 0x04, 0x84, 0x12, 0x4e, 0x30, 0x99,
  0xda, 0x9c, 0x49, 0xcc, 0x46, 0x1d, 0x90, 0xcd, 0x8d, 0xa8, 0x5c, 0x38, 0xf6, 0x06, 0x03, 0xb8,
  0xaf, 0xa0, 0x62, 0x73, 0x04, 0xa9, 0x19, 0x07, 0x6d, 0x60, 0x5d, 0xa0, 0x0a, 0xc9, 0xaa, 0xb9,
  0x50, 0x73, 0x70, 0x05, 0x96, 0x68, 0x13, 0x98, 0xa2, 0x75, 0xe0, 0x34, 0x30, 0xce, 0x3d, 0xac,
  0xcf, 0x1a, 0xfd, 0x0f, 0x3e, 0x84, 0x12, 0x3f, 0xd4, 0xf2, 0x95, 0x16, 0x1c, 0xae, 0xdd, 0x7f,
  0x7a, 0x39, 0xc0, 0x8a, 0x19, 0x44, 0x52, 0xfb, 0xa8, 0x8f, 0x9d, 0x36, 0x1e, 0x9c, 0xd6, 0x30,
  0x90, 0x65, 0x19, 0xf4, 0x39, 0x33, 0x8b, 0x3e, 0xec, 0xef, 0x43, 0xb4, 0x19, 0xf5, 0x6b, 0x79,
  0x3f, 0x40, 0x7d, 0x6d, 0x1e, 0xc3, 0xd1, 0xa3, 0xb0, 0x16, 0x8a, 0xeb, 0x35, 0x2d, 0x99, 0xcb,
  0x8b, 0xbb, 0xc8, 0x05, 0x8b, 0xfa, 0x51, 0xe5, 0xbb, 0x83, 0xc6, 0xa6, 0xb9, 0x96, 0xda, 0xf8,
  0xb2, 0x82, 0xf7, 0x59, 0x08, 0x88, 0x71, 0x3f, 0x6e, 0x4c, 0xd1, 0xc6, 0x31, 0xec, 0x85, 0x24,
  0x7a, 0x9e, 0xa0, 0x65, 0x89, 0xca, 0xd1, 0xee, 0x70, 0x55, 0x62, 0x7d, 0xcf, 0x25, 0xb3, 0xf6,
  0x8e, 0xb0, 0x8e, 0xfa, 0x72, 0xa2, 0x26, 0xa3, 0xf8, 0x5c, 0xf0, 0x39, 0x00, 0x94, 0x16, 0xff,
  0xde, 0xdf, 0x60, 0xa9, 0x57, 0xf8, 0x2d, 0x44, 0x68, 0xf1, 0xe0, 0x4b, 0x8f, 0x3f, 0xb3, 0xdc,
  0x51, 0xcb, 0xaa, 0x6a, 0x20, 0xca, 0x72, 0xe9, 0xd8, 0x54, 0xe2, 0xc0, 0x23, 0xa1, 0xb3, 0x03,
  0x5f, 0x2c, 0x6e, 0xd3, 0x4b, 0x92, 0x3f, 0x7f, 0x31, 0x1b, 0xbf, 0xa4, 0xb9, 0xb5, 0xa4, 0x19,
  0x0b, 0xeb, 0x76, 0x24, 0xda, 0x02, 0xd1, 0x91, 0xef, 0x06, 0xa6, 0xd4, 0x7c, 0x29, 0xd1, 0xb7,
  0x24, 0x30, 0x47, 0x7e, 0x01, 0xef, 0xd3, 0x35, 0x3b, 0x03, 0xeb, 0x98, 0x71, 0xf4, 0xd4, 0xfa,
  0xd2, 0x8d, 0x1d, 0xc9, 0x53, 0xfa, 0xd1, 0xfe, 0x17, 0x56, 0x5e, 0x2c, 0xd5, 0xa2, 0x4b, 0xf5,
  0xf2, 0x6c, 0xdb, 0x0e, 0x5f, 0x1d, 0x3f, 0xed, 0xc1, 0xfe, 0x3f, 0xb1, 0x20, 0xa3, 0x97, 0xd5,
  0x45, 0xf3, 0xfc, 0xd1, 0xa3, 0x13, 0x2d, 0xd2, 0x64, 0xd0, 0xee, 0xcd, 0x64, 0xaa, 0xf9, 0x0e,
  0x70, 0xe6, 0x58, 0x6a, 0x57, 0x28, 0x1d, 0x2e, 0x84, 0x4b, 0x5b, 0xd4, 0x34, 0x88, 0x33, 0x52,
  0xf8, 0xe6, 0x9b, 0x26, 0x3c, 0x17, 0x2b, 0xa8, 0x7b, 0x95, 0x11, 0x2e, 0x6c, 0x25, 0xd9, 0xce,
  0xd9, 0x6e, 0x39, 0x6a, 0xd8, 0x6f, 0xe7, 0xbe, 0xd7, 0x30, 0xdc, 0x7b, 0xff, 0xfe, 0x33, 0xf4,
  0xfb, 0xe3, 0x27, 0x0a, 0xc8, 0xa0, 0x55, 0xf4, 0xa6, 0xcc, 0xfa, 0xd1, 0x52, 0xb8, 0x86, 0xa7,
  0x8f, 0xee, 0x44, 0x84, 0x92, 0xa4, 0x1e, 0x51, 0x27, 0xb4, 0x8a, 0x69, 0xc5, 0x5c, 0x11, 0x36,
  0x91, 0x5a, 0x29, 0x72, 0x8c, 0x86, 0x09, 0xa4, 0xa3, 0x38, 0x69, 0x3d, 0x1b, 0x46, 0xcf, 0x02,
  0x19, 0x2c, 0x05, 0x69, 0x64, 0x07, 0xe7, 0x36, 0x9a, 0x83, 0xcf, 0xc8, 0x3a, 0xc0, 0x66, 0x8e,
  0x7c, 0xb4, 0xcf, 0x23, 0x96, 0x2f, 0x8d, 0xf1, 0xff, 0xc7, 0x75, 0x8a, 0x1e, 0xdf, 0x7c, 0x19,
  0xb7, 0xce, 0xf7, 0x81, 0xd1, 0xa5, 0xb0, 0x48, 0x99, 0x94, 0xd1, 0xeb, 0x36, 0x96, 0x28, 0xc3,
  0x33, 0x10, 0xfd, 0x35, 0xed, 0x71, 0xf2, 0xad, 0xe3, 0x5f, 0xd2, 0x12, 0x37, 0x5e, 0x6f, 0xe3,
  0xb0, 0xc8, 0x2a, 0x8a, 0x5e, 0xfb, 0x7e, 0x25, 0xe0, 0xad, 0xde, 0xc6, 0x90, 0x6d, 0x7d, 0xee,
  0x99, 0x97, 0xd2, 0x3a, 0x66, 0xe4, 0x55, 0x49, 0x57, 0x66, 0x7c, 0xae, 0x6d, 0x42, 0x38, 0x34,
  0x0b, 0xf2, 0xcd, 0x86, 0xf8, 0xb3, 0x27, 0xaf, 0x66, 0x3e, 0x30, 0xee, 0x9f, 0xd2, 0x41, 0xf3,
  0xa4, 0x7e, 0x02, 0x85, 0x60, 0x79, 0x2d, 0x63, 0x05, 0x00, 0x00
};

inline void serveSettingsHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", SETTINGS_HTML, SETTINGS_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

