/*
 * Binary arrays for the Web UI ui_app_immutable_entry_js files.
 */

#pragma once
#include <ESPAsyncWebServer.h>
#include <Arduino.h>

// app/immutable/entry/start.CZrVkjG-.js
const uint16_t APP_IMMUTABLE_ENTRY_START_CZRVKJG__JS_L = 68;
const uint8_t APP_IMMUTABLE_ENTRY_START_CZRVKJG__JS[] PROGMEM = {
  0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x7b, 0x73, 0x20, 0x61, 0x73, 0x20, 0x74, 0x7d, 0x66, 0x72,
  0x6f, 0x6d, 0x22, 0x2e, 0x2e, 0x2f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x2f, 0x69, 0x6e, 0x64,
  0x65, 0x78, 0x2e, 0x41, 0x59, 0x4b, 0x56, 0x74, 0x44, 0x66, 0x7a, 0x2e, 0x6a, 0x73, 0x22, 0x3b,
  0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x7b, 0x74, 0x20, 0x61, 0x73, 0x20, 0x73, 0x74, 0x61, 0x72,
  0x74, 0x7d, 0x3b, 0x0a
};

inline void serveAppImmutableEntryStartCZrVkjGJs(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "application/javascript", APP_IMMUTABLE_ENTRY_START_CZRVKJG__JS, APP_IMMUTABLE_ENTRY_START_CZRVKJG__JS_L);
  request->send(response);
}

// app/immutable/entry/app.DB13jl6x.js
const uint16_t APP_IMMUTABLE_ENTRY_APP_DB13JL6X_JS_L = 147;
const uint8_t APP_IMMUTABLE_ENTRY_APP_DB13JL6X_JS[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x25, 0xce, 0x31, 0x0e, 0xc2, 0x30,
  0x0c, 0x05, 0xd0, 0x9d, 0x53, 0x54, 0x9d, 0xad, 0xf4, 0x00, 0x9d, 0x90, 0xd8, 0xd8, 0x91, 0x98,
  0x50, 0xd4, 0xb8, 0x4a, 0x28, 0xb1, 0x91, 0x6d, 0x50, 0x01, 0xf5, 0xee, 0xc8, 0xe9, 0xf4, 0xfe,
  0xe2, 0xef, 0x5f, 0xea, 0x93, 0xc5, 0x7e, 0xa9, 0x8b, 0xda, 0x31, 0x64, 0x47, 0xa0, 0x3a, 0x08,
  0xe4, 0x24, 0x10, 0xc7, 0x20, 0x3a, 0x79, 0x9b, 0x85, 0x6b, 0x1f, 0xc2, 0x30, 0xe5, 0x17, 0x2d,
  0x3a, 0x14, 0x4a, 0xb8, 0x86, 0xe3, 0xf5, 0x7c, 0xb1, 0xd3, 0xfc, 0x0d, 0x77, 0xed, 0x47, 0x5c,
  0x5b, 0x25, 0xb7, 0xeb, 0x32, 0x59, 0x61, 0x8a, 0xf2, 0xd9, 0x6b, 0x32, 0xf3, 0xa2, 0x80, 0x1e,
  0x6b, 0xb4, 0x29, 0xa3, 0x28, 0xb4, 0xdf, 0xc4, 0x09, 0x15, 0xcc, 0xa3, 0x30, 0xdb, 0xbe, 0x44,
  0x51, 0xde, 0x28, 0xb7, 0x07, 0xc7, 0xa4, 0xdb, 0x78, 0xf8, 0x03, 0x77, 0x43, 0x7c, 0xac, 0xac,
  0x00, 0x00, 0x00
};

inline void serveAppImmutableEntryAppDb13jl6xJs(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "application/javascript", APP_IMMUTABLE_ENTRY_APP_DB13JL6X_JS, APP_IMMUTABLE_ENTRY_APP_DB13JL6X_JS_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

