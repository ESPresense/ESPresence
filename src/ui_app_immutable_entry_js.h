/*
 * Binary arrays for the Web UI ui_app_immutable_entry_js files.
 */

#pragma once
#include <ESPAsyncWebServer.h>
#include <Arduino.h>

// app/immutable/entry/start.wxoFcFfi.js
const uint16_t APP_IMMUTABLE_ENTRY_START_WXOFCFFI_JS_L = 68;
const uint8_t APP_IMMUTABLE_ENTRY_START_WXOFCFFI_JS[] PROGMEM = {
  0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x7b, 0x73, 0x20, 0x61, 0x73, 0x20, 0x74, 0x7d, 0x66, 0x72,
  0x6f, 0x6d, 0x22, 0x2e, 0x2e, 0x2f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x2f, 0x69, 0x6e, 0x64,
  0x65, 0x78, 0x2e, 0x43, 0x2d, 0x4b, 0x72, 0x73, 0x66, 0x6d, 0x31, 0x2e, 0x6a, 0x73, 0x22, 0x3b,
  0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x7b, 0x74, 0x20, 0x61, 0x73, 0x20, 0x73, 0x74, 0x61, 0x72,
  0x74, 0x7d, 0x3b, 0x0a
};

inline void serveAppImmutableEntryStartWxoFcFfiJs(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "application/javascript", APP_IMMUTABLE_ENTRY_START_WXOFCFFI_JS, APP_IMMUTABLE_ENTRY_START_WXOFCFFI_JS_L);
  request->send(response);
}

// app/immutable/entry/app.C3R1h_wN.js
const uint16_t APP_IMMUTABLE_ENTRY_APP_C3R1H_WN_JS_L = 143;
const uint8_t APP_IMMUTABLE_ENTRY_APP_C3R1H_WN_JS[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x24, 0x4e, 0x47, 0x12, 0xc2, 0x50,
  0x08, 0x3d, 0x8a, 0x65, 0xfd, 0xcb, 0xb8, 0xce, 0xd2, 0xa5, 0x77, 0x48, 0x85, 0xf4, 0x7c, 0x1c,
  0xc0, 0xae, 0x77, 0x77, 0x48, 0x36, 0xd4, 0xd7, 0x86, 0xe5, 0x4a, 0xac, 0x1f, 0xd8, 0x57, 0xb2,
  0x27, 0xd7, 0x5b, 0x63, 0xb7, 0x58, 0x43, 0x97, 0xac, 0x81, 0x63, 0x6b, 0xea, 0x2a, 0x6b, 0xfd,
  0xaf, 0x65, 0x5a, 0x8e, 0x21, 0xc4, 0xa6, 0xbf, 0xa5, 0x49, 0xe2, 0x90, 0x00, 0x9f, 0xe1, 0xec,
  0x2f, 0x2c, 0xed, 0x72, 0x0a, 0xa3, 0x1c, 0x33, 0x7c, 0xae, 0x92, 0xb4, 0xb2, 0x87, 0x46, 0x07,
  0x4a, 0x15, 0xbf, 0x36, 0x99, 0x9e, 0x68, 0x12, 0x87, 0x36, 0x2e, 0x95, 0x36, 0x3d, 0xb2, 0x38,
  0xb0, 0x2d, 0x11, 0xa0, 0x38, 0xb5, 0x91, 0x89, 0x74, 0x4b, 0x22, 0xc8, 0x77, 0xe4, 0x62, 0xa6,
  0x0a, 0xe4, 0x97, 0xfd, 0xc7, 0x05, 0x00, 0x46, 0x13, 0x75, 0xd6, 0xac, 0x00, 0x00, 0x00
};

inline void serveAppImmutableEntryAppC3R1hWNJs(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "application/javascript", APP_IMMUTABLE_ENTRY_APP_C3R1H_WN_JS, APP_IMMUTABLE_ENTRY_APP_C3R1H_WN_JS_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

