/*
 * Binary arrays for the Web UI ui_app_immutable_entry_js files.
 */

#pragma once
#include <ESPAsyncWebServer.h>
#include <Arduino.h>

// app/immutable/entry/start.CGV0ha5I.js
const uint16_t APP_IMMUTABLE_ENTRY_START_CGV0HA5I_JS_L = 68;
const uint8_t APP_IMMUTABLE_ENTRY_START_CGV0HA5I_JS[] PROGMEM = {
  0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x7b, 0x73, 0x20, 0x61, 0x73, 0x20, 0x74, 0x7d, 0x66, 0x72,
  0x6f, 0x6d, 0x22, 0x2e, 0x2e, 0x2f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x2f, 0x69, 0x6e, 0x64,
  0x65, 0x78, 0x2e, 0x43, 0x62, 0x4d, 0x61, 0x43, 0x4f, 0x71, 0x47, 0x2e, 0x6a, 0x73, 0x22, 0x3b,
  0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x7b, 0x74, 0x20, 0x61, 0x73, 0x20, 0x73, 0x74, 0x61, 0x72,
  0x74, 0x7d, 0x3b, 0x0a
};

inline void serveAppImmutableEntryStartCgv0ha5IJs(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "application/javascript", APP_IMMUTABLE_ENTRY_START_CGV0HA5I_JS, APP_IMMUTABLE_ENTRY_START_CGV0HA5I_JS_L);
  request->send(response);
}

// app/immutable/entry/app.CLQvaqjo.js
const uint16_t APP_IMMUTABLE_ENTRY_APP_CLQVAQJO_JS_L = 146;
const uint8_t APP_IMMUTABLE_ENTRY_APP_CLQVAQJO_JS[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x25, 0x4e, 0x35, 0x16, 0x02, 0x41,
  0x0c, 0xed, 0xb9, 0x04, 0x52, 0xe7, 0xcd, 0x1e, 0x60, 0x3b, 0xb4, 0x41, 0x8e, 0xc0, 0x1b, 0x59,
  0x97, 0x30, 0x49, 0x70, 0xb8, 0x3b, 0x2f, 0x43, 0x13, 0xfd, 0xd6, 0x0c, 0x17, 0x24, 0x79, 0x87,
  0x99, 0xe5, 0x19, 0x42, 0xad, 0x8d, 0x60, 0xd0, 0x56, 0xc0, 0xa8, 0x2d, 0x00, 0x69, 0x13, 0xb0,
  0xda, 0xea, 0x6f, 0x49, 0x38, 0x2c, 0x8c, 0xc9, 0x7c, 0x7d, 0x1d, 0x3b, 0xce, 0x9a, 0x31, 0x14,
  0x0f, 0xb3, 0x72, 0x07, 0xbb, 0x3a, 0xc5, 0x9d, 0x69, 0x79, 0x91, 0x17, 0x8f, 0x24, 0x89, 0x89,
  0xdd, 0x78, 0x69, 0x70, 0xb4, 0xf4, 0x04, 0x4a, 0x7c, 0xc4, 0x8e, 0xa1, 0xd0, 0x71, 0xb0, 0xe2,
  0xeb, 0x82, 0x18, 0x92, 0xf7, 0x88, 0xa1, 0x60, 0x90, 0xe4, 0x8f, 0x28, 0xff, 0x24, 0x5c, 0xd0,
  0xad, 0xa0, 0x73, 0x8f, 0x36, 0xf0, 0x37, 0x9f, 0xfc, 0x00, 0xb9, 0xa0, 0xab, 0x9f, 0xac, 0x00,
  0x00, 0x00
};

inline void serveAppImmutableEntryAppClQvaqjoJs(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "application/javascript", APP_IMMUTABLE_ENTRY_APP_CLQVAQJO_JS, APP_IMMUTABLE_ENTRY_APP_CLQVAQJO_JS_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

