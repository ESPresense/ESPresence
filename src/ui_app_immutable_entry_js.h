/*
 * Binary arrays for the Web UI ui_app_immutable_entry_js files.
 */

#pragma once
#include <ESPAsyncWebServer.h>
#include <Arduino.h>

// app/immutable/entry/start.C5wRB1Lm.js
const uint16_t APP_IMMUTABLE_ENTRY_START_C5WRB1LM_JS_L = 68;
const uint8_t APP_IMMUTABLE_ENTRY_START_C5WRB1LM_JS[] PROGMEM = {
  0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x7b, 0x73, 0x20, 0x61, 0x73, 0x20, 0x74, 0x7d, 0x66, 0x72,
  0x6f, 0x6d, 0x22, 0x2e, 0x2e, 0x2f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x2f, 0x69, 0x6e, 0x64,
  0x65, 0x78, 0x2e, 0x4a, 0x52, 0x71, 0x46, 0x74, 0x63, 0x52, 0x34, 0x2e, 0x6a, 0x73, 0x22, 0x3b,
  0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x7b, 0x74, 0x20, 0x61, 0x73, 0x20, 0x73, 0x74, 0x61, 0x72,
  0x74, 0x7d, 0x3b, 0x0a
};

inline void serveAppImmutableEntryStartC5wRb1LmJs(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "application/javascript", APP_IMMUTABLE_ENTRY_START_C5WRB1LM_JS, APP_IMMUTABLE_ENTRY_START_C5WRB1LM_JS_L);
  request->send(response);
}

// app/immutable/entry/app.CJH96ynr.js
const uint16_t APP_IMMUTABLE_ENTRY_APP_CJH96YNR_JS_L = 145;
const uint8_t APP_IMMUTABLE_ENTRY_APP_CJH96YNR_JS[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x24, 0x4e, 0x35, 0x1a, 0xc2, 0x50,
  0x0c, 0x3e, 0x0a, 0x32, 0x07, 0x67, 0x63, 0x46, 0xc7, 0x1e, 0xa0, 0x1e, 0xea, 0x2f, 0x90, 0x04,
  0x87, 0xbb, 0xf3, 0xe5, 0x75, 0x89, 0xfe, 0x56, 0x75, 0x17, 0x62, 0xfd, 0xe4, 0xc3, 0x44, 0x86,
  0x04, 0xa5, 0x35, 0x86, 0xce, 0x1a, 0x82, 0xb3, 0x96, 0x03, 0x5b, 0x53, 0x48, 0xac, 0x95, 0xbf,
  0x33, 0x53, 0x37, 0x9e, 0x4e, 0x67, 0x59, 0x79, 0x73, 0x8d, 0xcc, 0x2a, 0x97, 0xe3, 0x73, 0x7a,
  0x0a, 0xae, 0x3b, 0xcd, 0x82, 0xf5, 0xb4, 0x96, 0xf1, 0x06, 0x9f, 0x5e, 0x92, 0x3c, 0xbb, 0xca,
  0xb4, 0x22, 0x97, 0xf0, 0xab, 0x97, 0x29, 0x89, 0x1a, 0x01, 0xb4, 0xb1, 0x4b, 0x34, 0x2b, 0x91,
  0x05, 0xbc, 0xb7, 0xa3, 0x1c, 0x05, 0xd4, 0xfb, 0x13, 0x69, 0x9f, 0x44, 0x90, 0xef, 0xc8, 0x51,
  0x4b, 0x49, 0xfe, 0x5f, 0x71, 0xad, 0x35, 0x17, 0x00, 0x83, 0xaf, 0x05, 0xb2, 0xac, 0x00, 0x00,
  0x00
};

inline void serveAppImmutableEntryAppCjh96ynrJs(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "application/javascript", APP_IMMUTABLE_ENTRY_APP_CJH96YNR_JS, APP_IMMUTABLE_ENTRY_APP_CJH96YNR_JS_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

