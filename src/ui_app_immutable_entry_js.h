/*
 * Binary arrays for the Web UI ui_app_immutable_entry_js files.
 */

#pragma once
#include <ESPAsyncWebServer.h>
#include <Arduino.h>

// app/immutable/entry/start.BiNz8xqj.js
const uint16_t APP_IMMUTABLE_ENTRY_START_BINZ8XQJ_JS_L = 68;
const uint8_t APP_IMMUTABLE_ENTRY_START_BINZ8XQJ_JS[] PROGMEM = {
  0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x7b, 0x73, 0x20, 0x61, 0x73, 0x20, 0x74, 0x7d, 0x66, 0x72,
  0x6f, 0x6d, 0x22, 0x2e, 0x2e, 0x2f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x2f, 0x69, 0x6e, 0x64,
  0x65, 0x78, 0x2e, 0x43, 0x2d, 0x4d, 0x73, 0x31, 0x50, 0x67, 0x6d, 0x2e, 0x6a, 0x73, 0x22, 0x3b,
  0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x7b, 0x74, 0x20, 0x61, 0x73, 0x20, 0x73, 0x74, 0x61, 0x72,
  0x74, 0x7d, 0x3b, 0x0a
};

inline void serveAppImmutableEntryStartBiNz8xqjJs(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "application/javascript", APP_IMMUTABLE_ENTRY_START_BINZ8XQJ_JS, APP_IMMUTABLE_ENTRY_START_BINZ8XQJ_JS_L);
  request->send(response);
}

// app/immutable/entry/app.prKvLHeo.js
const uint16_t APP_IMMUTABLE_ENTRY_APP_PRKVLHEO_JS_L = 145;
const uint8_t APP_IMMUTABLE_ENTRY_APP_PRKVLHEO_JS[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x24, 0x4e, 0x35, 0x16, 0x02, 0x41,
  0x0c, 0x3d, 0x0a, 0x52, 0x8f, 0x3c, 0xea, 0x2d, 0x69, 0xb1, 0x13, 0xac, 0xbb, 0x85, 0x08, 0x0e,
  0x77, 0xe7, 0x65, 0xb6, 0x89, 0x7e, 0xeb, 0xa6, 0x2b, 0x90, 0x7c, 0xca, 0x75, 0xc6, 0x6b, 0x30,
  0xad, 0x36, 0x32, 0x93, 0xb6, 0xca, 0xcc, 0xda, 0x4a, 0x43, 0xda, 0xc4, 0x64, 0xda, 0xda, 0x5f,
  0x4d, 0x30, 0x6d, 0x9d, 0xf3, 0x45, 0x7b, 0x9b, 0x07, 0xf6, 0xdd, 0x5c, 0x56, 0x4f, 0xb7, 0xb7,
  0x47, 0xde, 0x5d, 0x9a, 0xc9, 0xf5, 0xbc, 0x8d, 0xaa, 0x67, 0x90, 0x84, 0xc0, 0xee, 0x0a, 0xe9,
  0x60, 0xce, 0xe8, 0xb5, 0xc8, 0xb4, 0x00, 0x03, 0x9b, 0x4a, 0xc7, 0x29, 0x93, 0xa2, 0xad, 0x88,
  0x4d, 0xf0, 0x9e, 0xa1, 0xac, 0xd8, 0x48, 0xf0, 0x07, 0x90, 0x25, 0x09, 0x57, 0x74, 0xaf, 0x28,
  0x19, 0x21, 0x2b, 0xf9, 0x17, 0xfd, 0xc7, 0x05, 0x00, 0x7a, 0xf3, 0xa0, 0x0e, 0xac, 0x00, 0x00,
  0x00
};

inline void serveAppImmutableEntryAppPrKvLHeoJs(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "application/javascript", APP_IMMUTABLE_ENTRY_APP_PRKVLHEO_JS, APP_IMMUTABLE_ENTRY_APP_PRKVLHEO_JS_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

