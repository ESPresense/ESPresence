/*
 * Binary arrays for the Web UI ui_html files.
 */

#pragma once
#include <ESPAsyncWebServer.h>
#include <Arduino.h>

// devices.html
const uint16_t DEVICES_HTML_L = 684;
const uint8_t DEVICES_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x9d, 0x94, 0xe5, 0x96, 0xeb, 0x36,
  0x10, 0x80, 0x7f, 0x67, 0x9f, 0x62, 0xae, 0x0a, 0xb1, 0xcf, 0xb1, 0x15, 0x58, 0x06, 0x6f, 0x99,
  0x99, 0x19, 0x14, 0x6b, 0x12, 0xab, 0x11, 0xb8, 0x92, 0x92, 0x2c, 0xbe, 0x7b, 0x47, 0xf6, 0x72,
  0xf9, 0x06, 0x6c, 0xd1, 0x7c, 0xc3, 0x3a, 0x79, 0x26, 0x5d, 0x1d, 0xcf, 0x5b, 0x84, 0x26, 0x1a,
  0x7d, 0xba, 0x75, 0x92, 0x5e, 0xa0, 0x85, 0x5d, 0x54, 0x0c, 0x2d, 0x3b, 0xdd, 0x1a, 0x9c, 0x34,
  0x28, 0x24, 0xbd, 0x07, 0x27, 0x06, 0xa3, 0x80, 0xba, 0x11, 0x3e, 0x60, 0xac, 0xd8, 0x2a, 0xce,
  0xcb, 0x03, 0x06, 0xa3, 0x6e, 0x4b, 0x2b, 0xbb, 0x04, 0x8f, 0xba, 0x62, 0xaa, 0x76, 0x96, 0x41,
  0xe3, 0x71, 0x5e, 0x31, 0x3e, 0x9a, 0x8b, 0x75, 0x5a, 0xe0, 0x61, 0xbd, 0x48, 0x47, 0xef, 0x28,
  0x56, 0x18, 0xac, 0xd8, 0x5a, 0xe1, 0xa6, 0x75, 0x3e, 0x32, 0xa0, 0x33, 0x11, 0x2d, 0x51, 0x37,
  0x4a, 0xc6, 0xa6, 0x92, 0x48, 0x62, 0x58, 0x76, 0x93, 0x02, 0x94, 0x55, 0x51, 0x09, 0x5d, 0x86,
  0x5a, 0x68, 0xac, 0x26, 0xb7, 0xa0, 0x50, 0x7b, 0xd5, 0xc6, 0x34, 0x1c, 0x8c, 0x46, 0xf0, 0x89,
  0x85, 0x56, 0x2c, 0x10, 0xb4, 0x13, 0x12, 0x9c, 0x87, 0x4d, 0x83, 0x36, 0x19, 0x6b, 0x17, 0xca,
  0x2e, 0x20, 0x36, 0x68, 0x30, 0x14, 0x30, 0xc3, 0x10, 0x21, 0x3a, 0x10, 0x52, 0x12, 0x96, 0xac,
  0x46, 0x7a, 0xc1, 0xaf, 0xc9, 0xc5, 0x5f, 0xbb, 0xf5, 0xb5, 0x53, 0x12, 0xde, 0xfe, 0xe4, 0xab,
  0x37, 0x12, 0x56, 0xcd, 0x21, 0xd3, 0x8e, 0xb4, 0x7e, 0x11, 0x9d, 0x27, 0x38, 0xef, 0x30, 0x50,
  0x55, 0x15, 0x0c, 0xa5, 0xf0, 0xcb, 0x21, 0x5c, 0x5d, 0x41, 0xf6, 0x2c, 0x1b, 0x76, 0xeb, 0xc3,
  0x84, 0x7a, 0x78, 0x3c, 0x87, 0x97, 0x5f, 0x86, 0x8d, 0xb2, 0xd2, 0x6d, 0xb8, 0x11, 0xb1, 0x6e,
  0x3e, 0x42, 0xa9, 0x44, 0x36, 0xcc, 0x5a, 0x8a, 0x0e, 0xfa, 0x50, 0xd6, 0x4e, 0x3b, 0x4f, 0x6e,
  0x25, 0xe9, 0x23, 0x48, 0xc4, 0x7c, 0x98, 0xf7, 0x47, 0x31, 0xe4, 0x39, 0x5c, 0x26, 0x23, 0x06,
  0x94, 0xa0, 0x95, 0xa1, 0xe0, 0xf0, 0xdb, 0xc1, 0x5b, 0x1a, 0xbb, 0x79, 0xad, 0x45, 0x08, 0x1f,
  0xaa, 0x10, 0x39, 0xb9, 0x93, 0xf5, 0x16, 0xe5, 0xc7, 0x49, 0xe6, 0x1a, 0x50, 0x07, 0xfc, 0xef,
  0xf2, 0x1e, 0x8d, 0x5b, 0xe3, 0x63, 0x44, 0x0a, 0xf1, 0xe8, 0x3e, 0xc6, 0xb7, 0x59, 0xbe, 0x4b,
  0xad, 0x68, 0xdb, 0x91, 0x32, 0x66, 0x15, 0xc5, 0x4c, 0xe3, 0x88, 0x48, 0x18, 0xc3, 0x88, 0x9c,
  0xc5, 0x33, 0xfe, 0xfa, 0xce, 0x9b, 0xe5, 0x27, 0xf8, 0xc9, 0x0e, 0xaf, 0x43, 0x60, 0x7d, 0x59,
  0x84, 0x78, 0xae, 0x31, 0x34, 0x88, 0x91, 0x3d, 0x29, 0x18, 0xe3, 0xe4, 0x4a, 0x23, 0x85, 0x24,
  0x65, 0x8e, 0xfd, 0x0d, 0x9e, 0xcc, 0xf5, 0xe7, 0xa3, 0x10, 0x85, 0x8f, 0xfc, 0xf5, 0xf7, 0xd4,
  0xee, 0xd2, 0x7c, 0x33, 0xe7, 0xbf, 0x85, 0xe7, 0x62, 0xd5, 0xcd, 0xca, 0x2e, 0xc3, 0xe8, 0x8d,
  0x8d, 0x59, 0xfc, 0x3e, 0x7b, 0xc7, 0x11, 0xe6, 0xf9, 0x4d, 0x4a, 0x6b, 0xfc, 0xcd, 0xef, 0x0e,
  0xa7, 0x8b, 0xb7, 0xd4, 0x9b, 0x3d, 0x89, 0xa2, 0x96, 0xca, 0x29, 0x0d, 0x66, 0x4e, 0x9e, 0x83,
  0x14, 0x51, 0x94, 0x61, 0x8d, 0x3a, 0xe2, 0x52, 0xc5, 0xf2, 0x86, 0x5a, 0xa6, 0xe5, 0x8a, 0x35,
  0x14, 0x76, 0xdf, 0xab, 0x97, 0x6a, 0x0d, 0x5d, 0x94, 0x2a, 0x26, 0x55, 0x68, 0xb5, 0x38, 0x3f,
  0xba, 0x6d, 0x8b, 0x0e, 0xfb, 0xb8, 0xe2, 0x07, 0x7d, 0x6e, 0x07, 0xbf, 0xfc, 0x72, 0x87, 0xfe,
  0x65, 0x67, 0xb7, 0x81, 0xaa, 0x4f, 0x3a, 0x7d, 0x66, 0x22, 0xe0, 0x11, 0x58, 0xdc, 0xc0, 0x57,
  0x9f, 0x7f, 0x98, 0x31, 0xce, 0x8a, 0xae, 0x38, 0xa3, 0x72, 0x36, 0xe7, 0xad, 0x88, 0x4d, 0xea,
  0x41, 0x1e, 0xb4, 0xaa, 0x31, 0x1b, 0x17, 0x50, 0x4e, 0xf2, 0xe2, 0x46, 0xb2, 0xcf, 0xe5, 0x11,
  0xb0, 0xd1, 0x4a, 0xb1, 0x7e, 0xed, 0xfa, 0x78, 0xab, 0x1f, 0x90, 0x45, 0x21, 0x02, 0xf6, 0x15,
  0x44, 0xda, 0xee, 0x8a, 0xab, 0x5e, 0x79, 0x4f, 0xef, 0x2f, 0x3a, 0x13, 0x89, 0xef, 0xef, 0x0b,
  0xed, 0x56, 0xf6, 0x53, 0xef, 0x8c, 0x0a, 0xc8, 0x85, 0xd6, 0xd9, 0x0f, 0x37, 0xba, 0x94, 0x49,
  0x17, 0x40, 0xf6, 0x9f, 0x13, 0x9e, 0x17, 0x8f, 0x05, 0xff, 0x63, 0x5a, 0xf2, 0x5e, 0xea, 0xa7,
  0x3c, 0xb5, 0xb0, 0xcd, 0xb2, 0x1f, 0x28, 0x5e, 0x05, 0xd0, 0xa9, 0x9f, 0x72, 0xa8, 0x4e, 0xef,
  0x62, 0x46, 0xab, 0xbc, 0xd3, 0x99, 0xd1, 0x56, 0x71, 0xeb, 0x66, 0xdf, 0x10, 0x14, 0x84, 0x34,
  0xe8, 0x5b, 0xe3, 0x51, 0x6f, 0xd0, 0x98, 0x92, 0xd7, 0x65, 0x3e, 0x65, 0x9c, 0x2e, 0xd1, 0x51,
  0x7f, 0x99, 0xfe, 0x01, 0x9e, 0xb0, 0x6d, 0xcb, 0x5d, 0x05, 0x00, 0x00
};

inline void serveDevicesHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", DEVICES_HTML, DEVICES_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

// fingerprints.html
const uint16_t FINGERPRINTS_HTML_L = 684;
const uint8_t FINGERPRINTS_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x9d, 0x94, 0xe5, 0x96, 0xeb, 0x36,
  0x10, 0x80, 0x7f, 0x67, 0x9f, 0x62, 0xae, 0x0a, 0xb1, 0xcf, 0xb1, 0x15, 0x58, 0x06, 0x6f, 0x99,
  0x99, 0x19, 0x14, 0x6b, 0x12, 0xab, 0x11, 0xb8, 0x92, 0x92, 0x2c, 0xbe, 0x7b, 0x47, 0xf6, 0x72,
  0xf9, 0x06, 0x6c, 0xd1, 0x7c, 0xc3, 0x3a, 0x79, 0x26, 0x5d, 0x1d, 0xcf, 0x5b, 0x84, 0x26, 0x1a,
  0x7d, 0xba, 0x75, 0x92, 0x5e, 0xa0, 0x85, 0x5d, 0x54, 0x0c, 0x2d, 0x3b, 0xdd, 0x1a, 0x9c, 0x34,
  0x28, 0x24, 0xbd, 0x07, 0x27, 0x06, 0xa3, 0x80, 0xba, 0x11, 0x3e, 0x60, 0xac, 0xd8, 0x2a, 0xce,
  0xcb, 0x03, 0x06, 0xa3, 0x6e, 0x4b, 0x2b, 0xbb, 0x04, 0x8f, 0xba, 0x62, 0xaa, 0x76, 0x96, 0x41,
  0xe3, 0x71, 0x5e, 0x31, 0x3e, 0x9a, 0x8b, 0x75, 0x5a, 0xe0, 0x61, 0xbd, 0x48, 0x47, 0xef, 0x28,
  0x56, 0x18, 0xac, 0xd8, 0x5a, 0xe1, 0xa6, 0x75, 0x3e, 0x32, 0xa0, 0x33, 0x11, 0x2d, 0x51, 0x37,
  0x4a, 0xc6, 0xa6, 0x92, 0x48, 0x62, 0x58, 0x76, 0x93, 0x02, 0x94, 0x55, 0x51, 0x09, 0x5d, 0x86,
  0x5a, 0x68, 0xac, 0x26, 0xb7, 0xa0, 0x50, 0x7b, 0xd5, 0xc6, 0x34, 0x1c, 0x8c, 0x46, 0xf0, 0x89,
  0x85, 0x56, 0x2c, 0x10, 0xb4, 0x13, 0x12, 0x9c, 0x87, 0x4d, 0x83, 0x36, 0x19, 0x6b, 0x17, 0xca,
  0x2e, 0x20, 0x36, 0x68, 0x30, 0x14, 0x30, 0xc3, 0x10, 0x21, 0x3a, 0x10, 0x52, 0x12, 0x96, 0xac,
  0x46, 0x7a, 0xc1, 0xaf, 0xc9, 0xc5, 0x5f, 0xbb, 0xf5, 0xb5, 0x53, 0x12, 0xde, 0xfe, 0xe4, 0xab,
  0x37, 0x12, 0x56, 0xcd, 0x21, 0xd3, 0x8e, 0xb4, 0x7e, 0x11, 0x9d, 0x27, 0x38, 0xef, 0x30, 0x50,
  0x55, 0x15, 0x0c, 0xa5, 0xf0, 0xcb, 0x21, 0x5c, 0x5d, 0x41, 0xf6, 0x2c, 0x1b, 0x76, 0xeb, 0xc3,
  0x84, 0x7a, 0x78, 0x3c, 0x87, 0x97, 0x5f, 0x86, 0x8d, 0xb2, 0xd2, 0x6d, 0xb8, 0x11, 0xb1, 0x6e,
  0x3e, 0x42, 0xa9, 0x44, 0x36, 0xcc, 0x5a, 0x8a, 0x0e, 0xfa, 0x50, 0xd6, 0x4e, 0x3b, 0x4f, 0x6e,
  0x25, 0xe9, 0x23, 0x48, 0xc4, 0x7c, 0x98, 0xf7, 0x47, 0x31, 0xe4, 0x39, 0x5c, 0x26, 0x23, 0x06,
  0x94, 0xa0, 0x95, 0xa1, 0xe0, 0xf0, 0xdb, 0xc1, 0x5b, 0x1a, 0xbb, 0x79, 0xad, 0x45, 0x08, 0x1f,
  0xaa, 0x10, 0x39, 0xb9, 0x93, 0xf5, 0x16, 0xe5, 0xc7, 0x49, 0xe6, 0x1a, 0x50, 0x07, 0xfc, 0xef,
  0xf2, 0x1e, 0x8d, 0x5b, 0xe3, 0x63, 0x44, 0x0a, 0xf1, 0xe8, 0x3e, 0xc6, 0xb7, 0x59, 0xbe, 0x4b,
  0xad, 0x68, 0xdb, 0x91, 0x32, 0x66, 0x15, 0xc5, 0x4c, 0xe3, 0x88, 0x48, 0x18, 0xc3, 0x88, 0x9c,
  0xc5, 0x33, 0xfe, 0xfa, 0xce, 0x9b, 0xe5, 0x27, 0xf8, 0xc9, 0x0e, 0xaf, 0x43, 0x60, 0x7d, 0x59,
  0x84, 0x78, 0xae, 0x31, 0x34, 0x88, 0x91, 0x3d, 0x29, 0x18, 0xe3, 0xe4, 0x4a, 0x23, 0x85, 0x24,
  0x65, 0x8e, 0xfd, 0x0d, 0x9e, 0xcc, 0xf5, 0xe7, 0xa3, 0x10, 0x85, 0x8f, 0xfc, 0xf5, 0xf7, 0xd4,
  0xee, 0xd2, 0x7c, 0x33, 0xe7, 0xbf, 0x85, 0xe7, 0x62, 0xd5, 0xcd, 0xca, 0x2e, 0xc3, 0xe8, 0x8d,
  0x8d, 0x59, 0xfc, 0x3e, 0x7b, 0xc7, 0x11, 0xe6, 0xf9, 0x4d, 0x4a, 0x6b, 0xfc, 0xcd, 0xef, 0x0e,
  0xa7, 0x8b, 0xb7, 0xd4, 0x9b, 0x3d, 0x89, 0xa2, 0x96, 0xca, 0x29, 0x0d, 0x66, 0x4e, 0x9e, 0x83,
  0x14, 0x51, 0x94, 0x61, 0x8d, 0x3a, 0xe2, 0x52, 0xc5, 0xf2, 0x86, 0x5a, 0xa6, 0xe5, 0x8a, 0x35,
  0x14, 0x76, 0xdf, 0xab, 0x97, 0x6a, 0x0d, 0x5d, 0x94, 0x2a, 0x26, 0x55, 0x68, 0xb5, 0x38, 0x3f,
  0xba, 0x6d, 0x8b, 0x0e, 0xfb, 0xb8, 0xe2, 0x07, 0x7d, 0x6e, 0x07, 0xbf, 0xfc, 0x72, 0x87, 0xfe,
  0x65, 0x67, 0xb7, 0x81, 0xaa, 0x4f, 0x3a, 0x7d, 0x66, 0x22, 0xe0, 0x11, 0x58, 0xdc, 0xc0, 0x57,
  0x9f, 0x7f, 0x98, 0x31, 0xce, 0x8a, 0xae, 0x38, 0xa3, 0x72, 0x36, 0xe7, 0xad, 0x88, 0x4d, 0xea,
  0x41, 0x1e, 0xb4, 0xaa, 0x31, 0x1b, 0x17, 0x50, 0x4e, 0xf2, 0xe2, 0x46, 0xb2, 0xcf, 0xe5, 0x11,
  0xb0, 0xd1, 0x4a, 0xb1, 0x7e, 0xed, 0xfa, 0x78, 0xab, 0x1f, 0x90, 0x45, 0x21, 0x02, 0xf6, 0x15,
  0x44, 0xda, 0xee, 0x8a, 0xab, 0x5e, 0x79, 0x4f, 0xef, 0x2f, 0x3a, 0x13, 0x89, 0xef, 0xef, 0x0b,
  0xed, 0x56, 0xf6, 0x53, 0xef, 0x8c, 0x0a, 0xc8, 0x85, 0xd6, 0xd9, 0x0f, 0x37, 0xba, 0x94, 0x49,
  0x17, 0x40, 0xf6, 0x9f, 0x13, 0x9e, 0x17, 0x8f, 0x05, 0xff, 0x63, 0x5a, 0xf2, 0x5e, 0xea, 0xa7,
  0x3c, 0xb5, 0xb0, 0xcd, 0xb2, 0x1f, 0x28, 0x5e, 0x05, 0xd0, 0xa9, 0x9f, 0x72, 0xa8, 0x4e, 0xef,
  0x62, 0x46, 0xab, 0xbc, 0xd3, 0x99, 0xd1, 0x56, 0x71, 0xeb, 0x66, 0xdf, 0x10, 0x14, 0x84, 0x34,
  0xe8, 0x5b, 0xe3, 0x51, 0x6f, 0xd0, 0x98, 0x92, 0xd7, 0x65, 0x3e, 0x65, 0x9c, 0x2e, 0xd1, 0x51,
  0x7f, 0x99, 0xfe, 0x01, 0x9e, 0xb0, 0x6d, 0xcb, 0x5d, 0x05, 0x00, 0x00
};

inline void serveFingerprintsHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", FINGERPRINTS_HTML, FINGERPRINTS_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

// index.html
const uint16_t INDEX_HTML_L = 684;
const uint8_t INDEX_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x9d, 0x94, 0xe5, 0x96, 0xeb, 0x36,
  0x10, 0x80, 0x7f, 0x67, 0x9f, 0x62, 0xae, 0x0a, 0xb1, 0xcf, 0xb1, 0x15, 0x58, 0x06, 0x6f, 0x99,
  0x99, 0x19, 0x14, 0x6b, 0x12, 0xab, 0x11, 0xb8, 0x92, 0x92, 0x2c, 0xbe, 0x7b, 0x47, 0xf6, 0x72,
  0xf9, 0x06, 0x6c, 0xd1, 0x7c, 0xc3, 0x3a, 0x79, 0x26, 0x5d, 0x1d, 0xcf, 0x5b, 0x84, 0x26, 0x1a,
  0x7d, 0xba, 0x75, 0x92, 0x5e, 0xa0, 0x85, 0x5d, 0x54, 0x0c, 0x2d, 0x3b, 0xdd, 0x1a, 0x9c, 0x34,
  0x28, 0x24, 0xbd, 0x07, 0x27, 0x06, 0xa3, 0x80, 0xba, 0x11, 0x3e, 0x60, 0xac, 0xd8, 0x2a, 0xce,
  0xcb, 0x03, 0x06, 0xa3, 0x6e, 0x4b, 0x2b, 0xbb, 0x04, 0x8f, 0xba, 0x62, 0xaa, 0x76, 0x96, 0x41,
  0xe3, 0x71, 0x5e, 0x31, 0x3e, 0x9a, 0x8b, 0x75, 0x5a, 0xe0, 0x61, 0xbd, 0x48, 0x47, 0xef, 0x28,
  0x56, 0x18, 0xac, 0xd8, 0x5a, 0xe1, 0xa6, 0x75, 0x3e, 0x32, 0xa0, 0x33, 0x11, 0x2d, 0x51, 0x37,
  0x4a, 0xc6, 0xa6, 0x92, 0x48, 0x62, 0x58, 0x76, 0x93, 0x02, 0x94, 0x55, 0x51, 0x09, 0x5d, 0x86,
  0x5a, 0x68, 0xac, 0x26, 0xb7, 0xa0, 0x50, 0x7b, 0xd5, 0xc6, 0x34, 0x1c, 0x8c, 0x46, 0xf0, 0x89,
  0x85, 0x56, 0x2c, 0x10, 0xb4, 0x13, 0x12, 0x9c, 0x87, 0x4d, 0x83, 0x36, 0x19, 0x6b, 0x17, 0xca,
  0x2e, 0x20, 0x36, 0x68, 0x30, 0x14, 0x30, 0xc3, 0x10, 0x21, 0x3a, 0x10, 0x52, 0x12, 0x96, 0xac,
  0x46, 0x7a, 0xc1, 0xaf, 0xc9, 0xc5, 0x5f, 0xbb, 0xf5, 0xb5, 0x53, 0x12, 0xde, 0xfe, 0xe4, 0xab,
  0x37, 0x12, 0x56, 0xcd, 0x21, 0xd3, 0x8e, 0xb4, 0x7e, 0x11, 0x9d, 0x27, 0x38, 0xef, 0x30, 0x50,
  0x55, 0x15, 0x0c, 0xa5, 0xf0, 0xcb, 0x21, 0x5c, 0x5d, 0x41, 0xf6, 0x2c, 0x1b, 0x76, 0xeb, 0xc3,
  0x84, 0x7a, 0x78, 0x3c, 0x87, 0x97, 0x5f, 0x86, 0x8d, 0xb2, 0xd2, 0x6d, 0xb8, 0x11, 0xb1, 0x6e,
  0x3e, 0x42, 0xa9, 0x44, 0x36, 0xcc, 0x5a, 0x8a, 0x0e, 0xfa, 0x50, 0xd6, 0x4e, 0x3b, 0x4f, 0x6e,
  0x25, 0xe9, 0x23, 0x48, 0xc4, 0x7c, 0x98, 0xf7, 0x47, 0x31, 0xe4, 0x39, 0x5c, 0x26, 0x23, 0x06,
  0x94, 0xa0, 0x95, 0xa1, 0xe0, 0xf0, 0xdb, 0xc1, 0x5b, 0x1a, 0xbb, 0x79, 0xad, 0x45, 0x08, 0x1f,
  0xaa, 0x10, 0x39, 0xb9, 0x93, 0xf5, 0x16, 0xe5, 0xc7, 0x49, 0xe6, 0x1a, 0x50, 0x07, 0xfc, 0xef,
  0xf2, 0x1e, 0x8d, 0x5b, 0xe3, 0x63, 0x44, 0x0a, 0xf1, 0xe8, 0x3e, 0xc6, 0xb7, 0x59, 0xbe, 0x4b,
  0xad, 0x68, 0xdb, 0x91, 0x32, 0x66, 0x15, 0xc5, 0x4c, 0xe3, 0x88, 0x48, 0x18, 0xc3, 0x88, 0x9c,
  0xc5, 0x33, 0xfe, 0xfa, 0xce, 0x9b, 0xe5, 0x27, 0xf8, 0xc9, 0x0e, 0xaf, 0x43, 0x60, 0x7d, 0x59,
  0x84, 0x78, 0xae, 0x31, 0x34, 0x88, 0x91, 0x3d, 0x29, 0x18, 0xe3, 0xe4, 0x4a, 0x23, 0x85, 0x24,
  0x65, 0x8e, 0xfd, 0x0d, 0x9e, 0xcc, 0xf5, 0xe7, 0xa3, 0x10, 0x85, 0x8f, 0xfc, 0xf5, 0xf7, 0xd4,
  0xee, 0xd2, 0x7c, 0x33, 0xe7, 0xbf, 0x85, 0xe7, 0x62, 0xd5, 0xcd, 0xca, 0x2e, 0xc3, 0xe8, 0x8d,
  0x8d, 0x59, 0xfc, 0x3e, 0x7b, 0xc7, 0x11, 0xe6, 0xf9, 0x4d, 0x4a, 0x6b, 0xfc, 0xcd, 0xef, 0x0e,
  0xa7, 0x8b, 0xb7, 0xd4, 0x9b, 0x3d, 0x89, 0xa2, 0x96, 0xca, 0x29, 0x0d, 0x66, 0x4e, 0x9e, 0x83,
  0x14, 0x51, 0x94, 0x61, 0x8d, 0x3a, 0xe2, 0x52, 0xc5, 0xf2, 0x86, 0x5a, 0xa6, 0xe5, 0x8a, 0x35,
  0x14, 0x76, 0xdf, 0xab, 0x97, 0x6a, 0x0d, 0x5d, 0x94, 0x2a, 0x26, 0x55, 0x68, 0xb5, 0x38, 0x3f,
  0xba, 0x6d, 0x8b, 0x0e, 0xfb, 0xb8, 0xe2, 0x07, 0x7d, 0x6e, 0x07, 0xbf, 0xfc, 0x72, 0x87, 0xfe,
  0x65, 0x67, 0xb7, 0x81, 0xaa, 0x4f, 0x3a, 0x7d, 0x66, 0x22, 0xe0, 0x11, 0x58, 0xdc, 0xc0, 0x57,
  0x9f, 0x7f, 0x98, 0x31, 0xce, 0x8a, 0xae, 0x38, 0xa3, 0x72, 0x36, 0xe7, 0xad, 0x88, 0x4d, 0xea,
  0x41, 0x1e, 0xb4, 0xaa, 0x31, 0x1b, 0x17, 0x50, 0x4e, 0xf2, 0xe2, 0x46, 0xb2, 0xcf, 0xe5, 0x11,
  0xb0, 0xd1, 0x4a, 0xb1, 0x7e, 0xed, 0xfa, 0x78, 0xab, 0x1f, 0x90, 0x45, 0x21, 0x02, 0xf6, 0x15,
  0x44, 0xda, 0xee, 0x8a, 0xab, 0x5e, 0x79, 0x4f, 0xef, 0x2f, 0x3a, 0x13, 0x89, 0xef, 0xef, 0x0b,
  0xed, 0x56, 0xf6, 0x53, 0xef, 0x8c, 0x0a, 0xc8, 0x85, 0xd6, 0xd9, 0x0f, 0x37, 0xba, 0x94, 0x49,
  0x17, 0x40, 0xf6, 0x9f, 0x13, 0x9e, 0x17, 0x8f, 0x05, 0xff, 0x63, 0x5a, 0xf2, 0x5e, 0xea, 0xa7,
  0x3c, 0xb5, 0xb0, 0xcd, 0xb2, 0x1f, 0x28, 0x5e, 0x05, 0xd0, 0xa9, 0x9f, 0x72, 0xa8, 0x4e, 0xef,
  0x62, 0x46, 0xab, 0xbc, 0xd3, 0x99, 0xd1, 0x56, 0x71, 0xeb, 0x66, 0xdf, 0x10, 0x14, 0x84, 0x34,
  0xe8, 0x5b, 0xe3, 0x51, 0x6f, 0xd0, 0x98, 0x92, 0xd7, 0x65, 0x3e, 0x65, 0x9c, 0x2e, 0xd1, 0x51,
  0x7f, 0x99, 0xfe, 0x01, 0x9e, 0xb0, 0x6d, 0xcb, 0x5d, 0x05, 0x00, 0x00
};

inline void serveIndexHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", INDEX_HTML, INDEX_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

// settings.html
const uint16_t SETTINGS_HTML_L = 684;
const uint8_t SETTINGS_HTML[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x9d, 0x94, 0xe5, 0x96, 0xeb, 0x36,
  0x10, 0x80, 0x7f, 0x67, 0x9f, 0x62, 0xae, 0x0a, 0xb1, 0xcf, 0xb1, 0x15, 0x58, 0x06, 0x6f, 0x99,
  0x99, 0x19, 0x14, 0x6b, 0x12, 0xab, 0x11, 0xb8, 0x92, 0x92, 0x2c, 0xbe, 0x7b, 0x47, 0xf6, 0x72,
  0xf9, 0x06, 0x6c, 0xd1, 0x7c, 0xc3, 0x3a, 0x79, 0x26, 0x5d, 0x1d, 0xcf, 0x5b, 0x84, 0x26, 0x1a,
  0x7d, 0xba, 0x75, 0x92, 0x5e, 0xa0, 0x85, 0x5d, 0x54, 0x0c, 0x2d, 0x3b, 0xdd, 0x1a, 0x9c, 0x34,
  0x28, 0x24, 0xbd, 0x07, 0x27, 0x06, 0xa3, 0x80, 0xba, 0x11, 0x3e, 0x60, 0xac, 0xd8, 0x2a, 0xce,
  0xcb, 0x03, 0x06, 0xa3, 0x6e, 0x4b, 0x2b, 0xbb, 0x04, 0x8f, 0xba, 0x62, 0xaa, 0x76, 0x96, 0x41,
  0xe3, 0x71, 0x5e, 0x31, 0x3e, 0x9a, 0x8b, 0x75, 0x5a, 0xe0, 0x61, 0xbd, 0x48, 0x47, 0xef, 0x28,
  0x56, 0x18, 0xac, 0xd8, 0x5a, 0xe1, 0xa6, 0x75, 0x3e, 0x32, 0xa0, 0x33, 0x11, 0x2d, 0x51, 0x37,
  0x4a, 0xc6, 0xa6, 0x92, 0x48, 0x62, 0x58, 0x76, 0x93, 0x02, 0x94, 0x55, 0x51, 0x09, 0x5d, 0x86,
  0x5a, 0x68, 0xac, 0x26, 0xb7, 0xa0, 0x50, 0x7b, 0xd5, 0xc6, 0x34, 0x1c, 0x8c, 0x46, 0xf0, 0x89,
  0x85, 0x56, 0x2c, 0x10, 0xb4, 0x13, 0x12, 0x9c, 0x87, 0x4d, 0x83, 0x36, 0x19, 0x6b, 0x17, 0xca,
  0x2e, 0x20, 0x36, 0x68, 0x30, 0x14, 0x30, 0xc3, 0x10, 0x21, 0x3a, 0x10, 0x52, 0x12, 0x96, 0xac,
  0x46, 0x7a, 0xc1, 0xaf, 0xc9, 0xc5, 0x5f, 0xbb, 0xf5, 0xb5, 0x53, 0x12, 0xde, 0xfe, 0xe4, 0xab,
  0x37, 0x12, 0x56, 0xcd, 0x21, 0xd3, 0x8e, 0xb4, 0x7e, 0x11, 0x9d, 0x27, 0x38, 0xef, 0x30, 0x50,
  0x55, 0x15, 0x0c, 0xa5, 0xf0, 0xcb, 0x21, 0x5c, 0x5d, 0x41, 0xf6, 0x2c, 0x1b, 0x76, 0xeb, 0xc3,
  0x84, 0x7a, 0x78, 0x3c, 0x87, 0x97, 0x5f, 0x86, 0x8d, 0xb2, 0xd2, 0x6d, 0xb8, 0x11, 0xb1, 0x6e,
  0x3e, 0x42, 0xa9, 0x44, 0x36, 0xcc, 0x5a, 0x8a, 0x0e, 0xfa, 0x50, 0xd6, 0x4e, 0x3b, 0x4f, 0x6e,
  0x25, 0xe9, 0x23, 0x48, 0xc4, 0x7c, 0x98, 0xf7, 0x47, 0x31, 0xe4, 0x39, 0x5c, 0x26, 0x23, 0x06,
  0x94, 0xa0, 0x95, 0xa1, 0xe0, 0xf0, 0xdb, 0xc1, 0x5b, 0x1a, 0xbb, 0x79, 0xad, 0x45, 0x08, 0x1f,
  0xaa, 0x10, 0x39, 0xb9, 0x93, 0xf5, 0x16, 0xe5, 0xc7, 0x49, 0xe6, 0x1a, 0x50, 0x07, 0xfc, 0xef,
  0xf2, 0x1e, 0x8d, 0x5b, 0xe3, 0x63, 0x44, 0x0a, 0xf1, 0xe8, 0x3e, 0xc6, 0xb7, 0x59, 0xbe, 0x4b,
  0xad, 0x68, 0xdb, 0x91, 0x32, 0x66, 0x15, 0xc5, 0x4c, 0xe3, 0x88, 0x48, 0x18, 0xc3, 0x88, 0x9c,
  0xc5, 0x33, 0xfe, 0xfa, 0xce, 0x9b, 0xe5, 0x27, 0xf8, 0xc9, 0x0e, 0xaf, 0x43, 0x60, 0x7d, 0x59,
  0x84, 0x78, 0xae, 0x31, 0x34, 0x88, 0x91, 0x3d, 0x29, 0x18, 0xe3, 0xe4, 0x4a, 0x23, 0x85, 0x24,
  0x65, 0x8e, 0xfd, 0x0d, 0x9e, 0xcc, 0xf5, 0xe7, 0xa3, 0x10, 0x85, 0x8f, 0xfc, 0xf5, 0xf7, 0xd4,
  0xee, 0xd2, 0x7c, 0x33, 0xe7, 0xbf, 0x85, 0xe7, 0x62, 0xd5, 0xcd, 0xca, 0x2e, 0xc3, 0xe8, 0x8d,
  0x8d, 0x59, 0xfc, 0x3e, 0x7b, 0xc7, 0x11, 0xe6, 0xf9, 0x4d, 0x4a, 0x6b, 0xfc, 0xcd, 0xef, 0x0e,
  0xa7, 0x8b, 0xb7, 0xd4, 0x9b, 0x3d, 0x89, 0xa2, 0x96, 0xca, 0x29, 0x0d, 0x66, 0x4e, 0x9e, 0x83,
  0x14, 0x51, 0x94, 0x61, 0x8d, 0x3a, 0xe2, 0x52, 0xc5, 0xf2, 0x86, 0x5a, 0xa6, 0xe5, 0x8a, 0x35,
  0x14, 0x76, 0xdf, 0xab, 0x97, 0x6a, 0x0d, 0x5d, 0x94, 0x2a, 0x26, 0x55, 0x68, 0xb5, 0x38, 0x3f,
  0xba, 0x6d, 0x8b, 0x0e, 0xfb, 0xb8, 0xe2, 0x07, 0x7d, 0x6e, 0x07, 0xbf, 0xfc, 0x72, 0x87, 0xfe,
  0x65, 0x67, 0xb7, 0x81, 0xaa, 0x4f, 0x3a, 0x7d, 0x66, 0x22, 0xe0, 0x11, 0x58, 0xdc, 0xc0, 0x57,
  0x9f, 0x7f, 0x98, 0x31, 0xce, 0x8a, 0xae, 0x38, 0xa3, 0x72, 0x36, 0xe7, 0xad, 0x88, 0x4d, 0xea,
  0x41, 0x1e, 0xb4, 0xaa, 0x31, 0x1b, 0x17, 0x50, 0x4e, 0xf2, 0xe2, 0x46, 0xb2, 0xcf, 0xe5, 0x11,
  0xb0, 0xd1, 0x4a, 0xb1, 0x7e, 0xed, 0xfa, 0x78, 0xab, 0x1f, 0x90, 0x45, 0x21, 0x02, 0xf6, 0x15,
  0x44, 0xda, 0xee, 0x8a, 0xab, 0x5e, 0x79, 0x4f, 0xef, 0x2f, 0x3a, 0x13, 0x89, 0xef, 0xef, 0x0b,
  0xed, 0x56, 0xf6, 0x53, 0xef, 0x8c, 0x0a, 0xc8, 0x85, 0xd6, 0xd9, 0x0f, 0x37, 0xba, 0x94, 0x49,
  0x17, 0x40, 0xf6, 0x9f, 0x13, 0x9e, 0x17, 0x8f, 0x05, 0xff, 0x63, 0x5a, 0xf2, 0x5e, 0xea, 0xa7,
  0x3c, 0xb5, 0xb0, 0xcd, 0xb2, 0x1f, 0x28, 0x5e, 0x05, 0xd0, 0xa9, 0x9f, 0x72, 0xa8, 0x4e, 0xef,
  0x62, 0x46, 0xab, 0xbc, 0xd3, 0x99, 0xd1, 0x56, 0x71, 0xeb, 0x66, 0xdf, 0x10, 0x14, 0x84, 0x34,
  0xe8, 0x5b, 0xe3, 0x51, 0x6f, 0xd0, 0x98, 0x92, 0xd7, 0x65, 0x3e, 0x65, 0x9c, 0x2e, 0xd1, 0x51,
  0x7f, 0x99, 0xfe, 0x01, 0x9e, 0xb0, 0x6d, 0xcb, 0x5d, 0x05, 0x00, 0x00
};

inline void serveSettingsHtml(AsyncWebServerRequest* request) {
  AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", SETTINGS_HTML, SETTINGS_HTML_L);
  response->addHeader(F("Content-Encoding"), "gzip");
  request->send(response);
}

